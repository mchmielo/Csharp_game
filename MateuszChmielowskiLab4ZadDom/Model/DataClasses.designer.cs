#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MateuszChmielowskiLab4ZadDom.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_9C7B39_mchmielokredek")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCar(Car instance);
    partial void UpdateCar(Car instance);
    partial void DeleteCar(Car instance);
    partial void InsertQuest(Quest instance);
    partial void UpdateQuest(Quest instance);
    partial void DeleteQuest(Quest instance);
    partial void InsertCarDealer(CarDealer instance);
    partial void UpdateCarDealer(CarDealer instance);
    partial void DeleteCarDealer(CarDealer instance);
    partial void InsertGarage(Garage instance);
    partial void UpdateGarage(Garage instance);
    partial void DeleteGarage(Garage instance);
    partial void InsertGasStation(GasStation instance);
    partial void UpdateGasStation(GasStation instance);
    partial void DeleteGasStation(GasStation instance);
    partial void InsertPlayer(Player instance);
    partial void UpdatePlayer(Player instance);
    partial void DeletePlayer(Player instance);
    partial void InsertPlayerStatus(PlayerStatus instance);
    partial void UpdatePlayerStatus(PlayerStatus instance);
    partial void DeletePlayerStatus(PlayerStatus instance);
    partial void InsertDealersCar(DealersCar instance);
    partial void UpdateDealersCar(DealersCar instance);
    partial void DeleteDealersCar(DealersCar instance);
    partial void InsertPlayerQuest(PlayerQuest instance);
    partial void UpdatePlayerQuest(PlayerQuest instance);
    partial void DeletePlayerQuest(PlayerQuest instance);
    partial void InsertPlayerCar(PlayerCar instance);
    partial void UpdatePlayerCar(PlayerCar instance);
    partial void DeletePlayerCar(PlayerCar instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::MateuszChmielowskiLab4ZadDom.Properties.Settings.Default.DB_9C7B39_mchmielokredekConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Car> Cars
		{
			get
			{
				return this.GetTable<Car>();
			}
		}
		
		public System.Data.Linq.Table<Quest> Quests
		{
			get
			{
				return this.GetTable<Quest>();
			}
		}
		
		public System.Data.Linq.Table<CarDealer> CarDealers
		{
			get
			{
				return this.GetTable<CarDealer>();
			}
		}
		
		public System.Data.Linq.Table<Garage> Garages
		{
			get
			{
				return this.GetTable<Garage>();
			}
		}
		
		public System.Data.Linq.Table<GasStation> GasStations
		{
			get
			{
				return this.GetTable<GasStation>();
			}
		}
		
		public System.Data.Linq.Table<Player> Players
		{
			get
			{
				return this.GetTable<Player>();
			}
		}
		
		public System.Data.Linq.Table<PlayerStatus> PlayerStatus
		{
			get
			{
				return this.GetTable<PlayerStatus>();
			}
		}
		
		public System.Data.Linq.Table<DealersCar> DealersCars
		{
			get
			{
				return this.GetTable<DealersCar>();
			}
		}
		
		public System.Data.Linq.Table<PlayerQuest> PlayerQuests
		{
			get
			{
				return this.GetTable<PlayerQuest>();
			}
		}
		
		public System.Data.Linq.Table<PlayerCar> PlayerCars
		{
			get
			{
				return this.GetTable<PlayerCar>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Car")]
	public partial class Car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Mark;
		
		private decimal _MaxSpeed;
		
		private decimal _MaxLoad;
		
		private decimal _Price;
		
		private decimal _GPSLatitude;
		
		private System.Nullable<decimal> _GPSLongitude;
		
		private decimal _FuelTankCapacity;
		
		private System.Data.Linq.Binary _Icon;
		
		private EntitySet<PlayerStatus> _PlayerStatus;
		
		private EntitySet<DealersCar> _DealersCars;
		
		private EntitySet<PlayerCar> _PlayerCars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMarkChanging(string value);
    partial void OnMarkChanged();
    partial void OnMaxSpeedChanging(decimal value);
    partial void OnMaxSpeedChanged();
    partial void OnMaxLoadChanging(decimal value);
    partial void OnMaxLoadChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnGPSLatitudeChanging(decimal value);
    partial void OnGPSLatitudeChanged();
    partial void OnGPSLongitudeChanging(System.Nullable<decimal> value);
    partial void OnGPSLongitudeChanged();
    partial void OnFuelTankCapacityChanging(decimal value);
    partial void OnFuelTankCapacityChanged();
    partial void OnIconChanging(System.Data.Linq.Binary value);
    partial void OnIconChanged();
    #endregion
		
		public Car()
		{
			this._PlayerStatus = new EntitySet<PlayerStatus>(new Action<PlayerStatus>(this.attach_PlayerStatus), new Action<PlayerStatus>(this.detach_PlayerStatus));
			this._DealersCars = new EntitySet<DealersCar>(new Action<DealersCar>(this.attach_DealersCars), new Action<DealersCar>(this.detach_DealersCars));
			this._PlayerCars = new EntitySet<PlayerCar>(new Action<PlayerCar>(this.attach_PlayerCars), new Action<PlayerCar>(this.detach_PlayerCars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxSpeed", DbType="Decimal(5,2) NOT NULL")]
		public decimal MaxSpeed
		{
			get
			{
				return this._MaxSpeed;
			}
			set
			{
				if ((this._MaxSpeed != value))
				{
					this.OnMaxSpeedChanging(value);
					this.SendPropertyChanging();
					this._MaxSpeed = value;
					this.SendPropertyChanged("MaxSpeed");
					this.OnMaxSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLoad", DbType="Decimal(10,2) NOT NULL")]
		public decimal MaxLoad
		{
			get
			{
				return this._MaxLoad;
			}
			set
			{
				if ((this._MaxLoad != value))
				{
					this.OnMaxLoadChanging(value);
					this.SendPropertyChanging();
					this._MaxLoad = value;
					this.SendPropertyChanged("MaxLoad");
					this.OnMaxLoadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(11,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSLatitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSLatitude
		{
			get
			{
				return this._GPSLatitude;
			}
			set
			{
				if ((this._GPSLatitude != value))
				{
					this.OnGPSLatitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSLatitude = value;
					this.SendPropertyChanged("GPSLatitude");
					this.OnGPSLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSLongitude", DbType="Decimal(10,7)")]
		public System.Nullable<decimal> GPSLongitude
		{
			get
			{
				return this._GPSLongitude;
			}
			set
			{
				if ((this._GPSLongitude != value))
				{
					this.OnGPSLongitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSLongitude = value;
					this.SendPropertyChanged("GPSLongitude");
					this.OnGPSLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelTankCapacity", DbType="Decimal(10,2) NOT NULL")]
		public decimal FuelTankCapacity
		{
			get
			{
				return this._FuelTankCapacity;
			}
			set
			{
				if ((this._FuelTankCapacity != value))
				{
					this.OnFuelTankCapacityChanging(value);
					this.SendPropertyChanging();
					this._FuelTankCapacity = value;
					this.SendPropertyChanged("FuelTankCapacity");
					this.OnFuelTankCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_PlayerStatus", Storage="_PlayerStatus", ThisKey="ID", OtherKey="CurrentCarID")]
		public EntitySet<PlayerStatus> PlayerStatus
		{
			get
			{
				return this._PlayerStatus;
			}
			set
			{
				this._PlayerStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_DealersCar", Storage="_DealersCars", ThisKey="ID", OtherKey="CarID")]
		public EntitySet<DealersCar> DealersCars
		{
			get
			{
				return this._DealersCars;
			}
			set
			{
				this._DealersCars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_PlayerCar", Storage="_PlayerCars", ThisKey="ID", OtherKey="CarID")]
		public EntitySet<PlayerCar> PlayerCars
		{
			get
			{
				return this._PlayerCars;
			}
			set
			{
				this._PlayerCars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlayerStatus(PlayerStatus entity)
		{
			this.SendPropertyChanging();
			entity.Car = this;
		}
		
		private void detach_PlayerStatus(PlayerStatus entity)
		{
			this.SendPropertyChanging();
			entity.Car = null;
		}
		
		private void attach_DealersCars(DealersCar entity)
		{
			this.SendPropertyChanging();
			entity.Car = this;
		}
		
		private void detach_DealersCars(DealersCar entity)
		{
			this.SendPropertyChanging();
			entity.Car = null;
		}
		
		private void attach_PlayerCars(PlayerCar entity)
		{
			this.SendPropertyChanging();
			entity.Car = this;
		}
		
		private void detach_PlayerCars(PlayerCar entity)
		{
			this.SendPropertyChanging();
			entity.Car = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quest")]
	public partial class Quest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _GPSFromLatitude;
		
		private decimal _GPSFromLongitude;
		
		private decimal _GPSToLatitude;
		
		private decimal _GPSToLongitude;
		
		private decimal _MaxEndTime;
		
		private decimal _Reward;
		
		private string _Description;
		
		private EntitySet<PlayerQuest> _PlayerQuests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGPSFromLatitudeChanging(decimal value);
    partial void OnGPSFromLatitudeChanged();
    partial void OnGPSFromLongitudeChanging(decimal value);
    partial void OnGPSFromLongitudeChanged();
    partial void OnGPSToLatitudeChanging(decimal value);
    partial void OnGPSToLatitudeChanged();
    partial void OnGPSToLongitudeChanging(decimal value);
    partial void OnGPSToLongitudeChanged();
    partial void OnMaxEndTimeChanging(decimal value);
    partial void OnMaxEndTimeChanged();
    partial void OnRewardChanging(decimal value);
    partial void OnRewardChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Quest()
		{
			this._PlayerQuests = new EntitySet<PlayerQuest>(new Action<PlayerQuest>(this.attach_PlayerQuests), new Action<PlayerQuest>(this.detach_PlayerQuests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSFromLatitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSFromLatitude
		{
			get
			{
				return this._GPSFromLatitude;
			}
			set
			{
				if ((this._GPSFromLatitude != value))
				{
					this.OnGPSFromLatitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSFromLatitude = value;
					this.SendPropertyChanged("GPSFromLatitude");
					this.OnGPSFromLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSFromLongitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSFromLongitude
		{
			get
			{
				return this._GPSFromLongitude;
			}
			set
			{
				if ((this._GPSFromLongitude != value))
				{
					this.OnGPSFromLongitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSFromLongitude = value;
					this.SendPropertyChanged("GPSFromLongitude");
					this.OnGPSFromLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSToLatitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSToLatitude
		{
			get
			{
				return this._GPSToLatitude;
			}
			set
			{
				if ((this._GPSToLatitude != value))
				{
					this.OnGPSToLatitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSToLatitude = value;
					this.SendPropertyChanged("GPSToLatitude");
					this.OnGPSToLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSToLongitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSToLongitude
		{
			get
			{
				return this._GPSToLongitude;
			}
			set
			{
				if ((this._GPSToLongitude != value))
				{
					this.OnGPSToLongitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSToLongitude = value;
					this.SendPropertyChanged("GPSToLongitude");
					this.OnGPSToLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxEndTime", DbType="Decimal(6,1) NOT NULL")]
		public decimal MaxEndTime
		{
			get
			{
				return this._MaxEndTime;
			}
			set
			{
				if ((this._MaxEndTime != value))
				{
					this.OnMaxEndTimeChanging(value);
					this.SendPropertyChanging();
					this._MaxEndTime = value;
					this.SendPropertyChanged("MaxEndTime");
					this.OnMaxEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reward", DbType="Decimal(11,2) NOT NULL")]
		public decimal Reward
		{
			get
			{
				return this._Reward;
			}
			set
			{
				if ((this._Reward != value))
				{
					this.OnRewardChanging(value);
					this.SendPropertyChanging();
					this._Reward = value;
					this.SendPropertyChanged("Reward");
					this.OnRewardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quest_PlayerQuest", Storage="_PlayerQuests", ThisKey="ID", OtherKey="QuestID")]
		public EntitySet<PlayerQuest> PlayerQuests
		{
			get
			{
				return this._PlayerQuests;
			}
			set
			{
				this._PlayerQuests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlayerQuests(PlayerQuest entity)
		{
			this.SendPropertyChanging();
			entity.Quest = this;
		}
		
		private void detach_PlayerQuests(PlayerQuest entity)
		{
			this.SendPropertyChanging();
			entity.Quest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarDealer")]
	public partial class CarDealer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private decimal _GPSLatitude;
		
		private decimal _GPSLongitude;
		
		private int _ProfitMargin;
		
		private EntitySet<DealersCar> _DealersCars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGPSLatitudeChanging(decimal value);
    partial void OnGPSLatitudeChanged();
    partial void OnGPSLongitudeChanging(decimal value);
    partial void OnGPSLongitudeChanged();
    partial void OnProfitMarginChanging(int value);
    partial void OnProfitMarginChanged();
    #endregion
		
		public CarDealer()
		{
			this._DealersCars = new EntitySet<DealersCar>(new Action<DealersCar>(this.attach_DealersCars), new Action<DealersCar>(this.detach_DealersCars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSLatitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSLatitude
		{
			get
			{
				return this._GPSLatitude;
			}
			set
			{
				if ((this._GPSLatitude != value))
				{
					this.OnGPSLatitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSLatitude = value;
					this.SendPropertyChanged("GPSLatitude");
					this.OnGPSLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSLongitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSLongitude
		{
			get
			{
				return this._GPSLongitude;
			}
			set
			{
				if ((this._GPSLongitude != value))
				{
					this.OnGPSLongitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSLongitude = value;
					this.SendPropertyChanged("GPSLongitude");
					this.OnGPSLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitMargin", DbType="Int NOT NULL")]
		public int ProfitMargin
		{
			get
			{
				return this._ProfitMargin;
			}
			set
			{
				if ((this._ProfitMargin != value))
				{
					this.OnProfitMarginChanging(value);
					this.SendPropertyChanging();
					this._ProfitMargin = value;
					this.SendPropertyChanged("ProfitMargin");
					this.OnProfitMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarDealer_DealersCar", Storage="_DealersCars", ThisKey="ID", OtherKey="DealerID")]
		public EntitySet<DealersCar> DealersCars
		{
			get
			{
				return this._DealersCars;
			}
			set
			{
				this._DealersCars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DealersCars(DealersCar entity)
		{
			this.SendPropertyChanging();
			entity.CarDealer = this;
		}
		
		private void detach_DealersCars(DealersCar entity)
		{
			this.SendPropertyChanging();
			entity.CarDealer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Garage")]
	public partial class Garage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Address;
		
		private decimal _GPSLatitude;
		
		private decimal _GPSLongitude;
		
		private int _Capacity;
		
		private System.Nullable<int> _PlayerID;
		
		private EntityRef<Player> _Player;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnGPSLatitudeChanging(decimal value);
    partial void OnGPSLatitudeChanged();
    partial void OnGPSLongitudeChanging(decimal value);
    partial void OnGPSLongitudeChanged();
    partial void OnCapacityChanging(int value);
    partial void OnCapacityChanged();
    partial void OnPlayerIDChanging(System.Nullable<int> value);
    partial void OnPlayerIDChanged();
    #endregion
		
		public Garage()
		{
			this._Player = default(EntityRef<Player>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSLatitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSLatitude
		{
			get
			{
				return this._GPSLatitude;
			}
			set
			{
				if ((this._GPSLatitude != value))
				{
					this.OnGPSLatitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSLatitude = value;
					this.SendPropertyChanged("GPSLatitude");
					this.OnGPSLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSLongitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSLongitude
		{
			get
			{
				return this._GPSLongitude;
			}
			set
			{
				if ((this._GPSLongitude != value))
				{
					this.OnGPSLongitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSLongitude = value;
					this.SendPropertyChanged("GPSLongitude");
					this.OnGPSLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int NOT NULL")]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="Int")]
		public System.Nullable<int> PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					if (this._Player.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._PlayerID = value;
					this.SendPropertyChanged("PlayerID");
					this.OnPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_Garage", Storage="_Player", ThisKey="PlayerID", OtherKey="ID", IsForeignKey=true)]
		public Player Player
		{
			get
			{
				return this._Player.Entity;
			}
			set
			{
				Player previousValue = this._Player.Entity;
				if (((previousValue != value) 
							|| (this._Player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Player.Entity = null;
						previousValue.Garages.Remove(this);
					}
					this._Player.Entity = value;
					if ((value != null))
					{
						value.Garages.Add(this);
						this._PlayerID = value.ID;
					}
					else
					{
						this._PlayerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Player");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GasStation")]
	public partial class GasStation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private decimal _GPSLatitude;
		
		private decimal _GPSLongitude;
		
		private decimal _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGPSLatitudeChanging(decimal value);
    partial void OnGPSLatitudeChanged();
    partial void OnGPSLongitudeChanging(decimal value);
    partial void OnGPSLongitudeChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public GasStation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSLatitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSLatitude
		{
			get
			{
				return this._GPSLatitude;
			}
			set
			{
				if ((this._GPSLatitude != value))
				{
					this.OnGPSLatitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSLatitude = value;
					this.SendPropertyChanged("GPSLatitude");
					this.OnGPSLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSLongitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSLongitude
		{
			get
			{
				return this._GPSLongitude;
			}
			set
			{
				if ((this._GPSLongitude != value))
				{
					this.OnGPSLongitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSLongitude = value;
					this.SendPropertyChanged("GPSLongitude");
					this.OnGPSLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(4,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Player")]
	public partial class Player : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Login;
		
		private string _Password;
		
		private EntitySet<Garage> _Garages;
		
		private EntitySet<PlayerStatus> _PlayerStatus;
		
		private EntitySet<PlayerQuest> _PlayerQuests;
		
		private EntitySet<PlayerCar> _PlayerCars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Player()
		{
			this._Garages = new EntitySet<Garage>(new Action<Garage>(this.attach_Garages), new Action<Garage>(this.detach_Garages));
			this._PlayerStatus = new EntitySet<PlayerStatus>(new Action<PlayerStatus>(this.attach_PlayerStatus), new Action<PlayerStatus>(this.detach_PlayerStatus));
			this._PlayerQuests = new EntitySet<PlayerQuest>(new Action<PlayerQuest>(this.attach_PlayerQuests), new Action<PlayerQuest>(this.detach_PlayerQuests));
			this._PlayerCars = new EntitySet<PlayerCar>(new Action<PlayerCar>(this.attach_PlayerCars), new Action<PlayerCar>(this.detach_PlayerCars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_Garage", Storage="_Garages", ThisKey="ID", OtherKey="PlayerID")]
		public EntitySet<Garage> Garages
		{
			get
			{
				return this._Garages;
			}
			set
			{
				this._Garages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_PlayerStatus", Storage="_PlayerStatus", ThisKey="ID", OtherKey="PlayerID")]
		public EntitySet<PlayerStatus> PlayerStatus
		{
			get
			{
				return this._PlayerStatus;
			}
			set
			{
				this._PlayerStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_PlayerQuest", Storage="_PlayerQuests", ThisKey="ID", OtherKey="PlayerID")]
		public EntitySet<PlayerQuest> PlayerQuests
		{
			get
			{
				return this._PlayerQuests;
			}
			set
			{
				this._PlayerQuests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_PlayerCar", Storage="_PlayerCars", ThisKey="ID", OtherKey="PlayerID")]
		public EntitySet<PlayerCar> PlayerCars
		{
			get
			{
				return this._PlayerCars;
			}
			set
			{
				this._PlayerCars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Garages(Garage entity)
		{
			this.SendPropertyChanging();
			entity.Player = this;
		}
		
		private void detach_Garages(Garage entity)
		{
			this.SendPropertyChanging();
			entity.Player = null;
		}
		
		private void attach_PlayerStatus(PlayerStatus entity)
		{
			this.SendPropertyChanging();
			entity.Player = this;
		}
		
		private void detach_PlayerStatus(PlayerStatus entity)
		{
			this.SendPropertyChanging();
			entity.Player = null;
		}
		
		private void attach_PlayerQuests(PlayerQuest entity)
		{
			this.SendPropertyChanging();
			entity.Player = this;
		}
		
		private void detach_PlayerQuests(PlayerQuest entity)
		{
			this.SendPropertyChanging();
			entity.Player = null;
		}
		
		private void attach_PlayerCars(PlayerCar entity)
		{
			this.SendPropertyChanging();
			entity.Player = this;
		}
		
		private void detach_PlayerCars(PlayerCar entity)
		{
			this.SendPropertyChanging();
			entity.Player = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlayerStatus")]
	public partial class PlayerStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PlayerID;
		
		private bool _IsOnline;
		
		private decimal _GPSLatitude;
		
		private decimal _GPSLongitude;
		
		private decimal _CurrentGold;
		
		private System.Nullable<int> _CurrentCarID;
		
		private EntityRef<Car> _Car;
		
		private EntityRef<Player> _Player;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPlayerIDChanging(int value);
    partial void OnPlayerIDChanged();
    partial void OnIsOnlineChanging(bool value);
    partial void OnIsOnlineChanged();
    partial void OnGPSLatitudeChanging(decimal value);
    partial void OnGPSLatitudeChanged();
    partial void OnGPSLongitudeChanging(decimal value);
    partial void OnGPSLongitudeChanged();
    partial void OnCurrentGoldChanging(decimal value);
    partial void OnCurrentGoldChanged();
    partial void OnCurrentCarIDChanging(System.Nullable<int> value);
    partial void OnCurrentCarIDChanged();
    #endregion
		
		public PlayerStatus()
		{
			this._Car = default(EntityRef<Car>);
			this._Player = default(EntityRef<Player>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="Int NOT NULL")]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					if (this._Player.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._PlayerID = value;
					this.SendPropertyChanged("PlayerID");
					this.OnPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="Bit NOT NULL")]
		public bool IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSLatitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSLatitude
		{
			get
			{
				return this._GPSLatitude;
			}
			set
			{
				if ((this._GPSLatitude != value))
				{
					this.OnGPSLatitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSLatitude = value;
					this.SendPropertyChanged("GPSLatitude");
					this.OnGPSLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPSLongitude", DbType="Decimal(10,7) NOT NULL")]
		public decimal GPSLongitude
		{
			get
			{
				return this._GPSLongitude;
			}
			set
			{
				if ((this._GPSLongitude != value))
				{
					this.OnGPSLongitudeChanging(value);
					this.SendPropertyChanging();
					this._GPSLongitude = value;
					this.SendPropertyChanged("GPSLongitude");
					this.OnGPSLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentGold", DbType="Decimal(18,2) NOT NULL")]
		public decimal CurrentGold
		{
			get
			{
				return this._CurrentGold;
			}
			set
			{
				if ((this._CurrentGold != value))
				{
					this.OnCurrentGoldChanging(value);
					this.SendPropertyChanging();
					this._CurrentGold = value;
					this.SendPropertyChanged("CurrentGold");
					this.OnCurrentGoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCarID", DbType="Int")]
		public System.Nullable<int> CurrentCarID
		{
			get
			{
				return this._CurrentCarID;
			}
			set
			{
				if ((this._CurrentCarID != value))
				{
					if (this._Car.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentCarIDChanging(value);
					this.SendPropertyChanging();
					this._CurrentCarID = value;
					this.SendPropertyChanged("CurrentCarID");
					this.OnCurrentCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_PlayerStatus", Storage="_Car", ThisKey="CurrentCarID", OtherKey="ID", IsForeignKey=true)]
		public Car Car
		{
			get
			{
				return this._Car.Entity;
			}
			set
			{
				Car previousValue = this._Car.Entity;
				if (((previousValue != value) 
							|| (this._Car.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car.Entity = null;
						previousValue.PlayerStatus.Remove(this);
					}
					this._Car.Entity = value;
					if ((value != null))
					{
						value.PlayerStatus.Add(this);
						this._CurrentCarID = value.ID;
					}
					else
					{
						this._CurrentCarID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Car");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_PlayerStatus", Storage="_Player", ThisKey="PlayerID", OtherKey="ID", IsForeignKey=true)]
		public Player Player
		{
			get
			{
				return this._Player.Entity;
			}
			set
			{
				Player previousValue = this._Player.Entity;
				if (((previousValue != value) 
							|| (this._Player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Player.Entity = null;
						previousValue.PlayerStatus.Remove(this);
					}
					this._Player.Entity = value;
					if ((value != null))
					{
						value.PlayerStatus.Add(this);
						this._PlayerID = value.ID;
					}
					else
					{
						this._PlayerID = default(int);
					}
					this.SendPropertyChanged("Player");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DealersCars")]
	public partial class DealersCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DealerID;
		
		private int _CarID;
		
		private decimal _FuelLevel;
		
		private EntityRef<Car> _Car;
		
		private EntityRef<CarDealer> _CarDealer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDealerIDChanging(int value);
    partial void OnDealerIDChanged();
    partial void OnCarIDChanging(int value);
    partial void OnCarIDChanged();
    partial void OnFuelLevelChanging(decimal value);
    partial void OnFuelLevelChanged();
    #endregion
		
		public DealersCar()
		{
			this._Car = default(EntityRef<Car>);
			this._CarDealer = default(EntityRef<CarDealer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerID", DbType="Int NOT NULL")]
		public int DealerID
		{
			get
			{
				return this._DealerID;
			}
			set
			{
				if ((this._DealerID != value))
				{
					if (this._CarDealer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealerIDChanging(value);
					this.SendPropertyChanging();
					this._DealerID = value;
					this.SendPropertyChanged("DealerID");
					this.OnDealerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarID", DbType="Int NOT NULL")]
		public int CarID
		{
			get
			{
				return this._CarID;
			}
			set
			{
				if ((this._CarID != value))
				{
					if (this._Car.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarIDChanging(value);
					this.SendPropertyChanging();
					this._CarID = value;
					this.SendPropertyChanged("CarID");
					this.OnCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelLevel", DbType="Decimal(10,2) NOT NULL")]
		public decimal FuelLevel
		{
			get
			{
				return this._FuelLevel;
			}
			set
			{
				if ((this._FuelLevel != value))
				{
					this.OnFuelLevelChanging(value);
					this.SendPropertyChanging();
					this._FuelLevel = value;
					this.SendPropertyChanged("FuelLevel");
					this.OnFuelLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_DealersCar", Storage="_Car", ThisKey="CarID", OtherKey="ID", IsForeignKey=true)]
		public Car Car
		{
			get
			{
				return this._Car.Entity;
			}
			set
			{
				Car previousValue = this._Car.Entity;
				if (((previousValue != value) 
							|| (this._Car.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car.Entity = null;
						previousValue.DealersCars.Remove(this);
					}
					this._Car.Entity = value;
					if ((value != null))
					{
						value.DealersCars.Add(this);
						this._CarID = value.ID;
					}
					else
					{
						this._CarID = default(int);
					}
					this.SendPropertyChanged("Car");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarDealer_DealersCar", Storage="_CarDealer", ThisKey="DealerID", OtherKey="ID", IsForeignKey=true)]
		public CarDealer CarDealer
		{
			get
			{
				return this._CarDealer.Entity;
			}
			set
			{
				CarDealer previousValue = this._CarDealer.Entity;
				if (((previousValue != value) 
							|| (this._CarDealer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarDealer.Entity = null;
						previousValue.DealersCars.Remove(this);
					}
					this._CarDealer.Entity = value;
					if ((value != null))
					{
						value.DealersCars.Add(this);
						this._DealerID = value.ID;
					}
					else
					{
						this._DealerID = default(int);
					}
					this.SendPropertyChanged("CarDealer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlayerQuest")]
	public partial class PlayerQuest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PlayerID;
		
		private int _QuestID;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private EntityRef<Player> _Player;
		
		private EntityRef<Quest> _Quest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPlayerIDChanging(int value);
    partial void OnPlayerIDChanged();
    partial void OnQuestIDChanging(int value);
    partial void OnQuestIDChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    #endregion
		
		public PlayerQuest()
		{
			this._Player = default(EntityRef<Player>);
			this._Quest = default(EntityRef<Quest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="Int NOT NULL")]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					if (this._Player.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._PlayerID = value;
					this.SendPropertyChanged("PlayerID");
					this.OnPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestID", DbType="Int NOT NULL")]
		public int QuestID
		{
			get
			{
				return this._QuestID;
			}
			set
			{
				if ((this._QuestID != value))
				{
					if (this._Quest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestIDChanging(value);
					this.SendPropertyChanging();
					this._QuestID = value;
					this.SendPropertyChanged("QuestID");
					this.OnQuestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_PlayerQuest", Storage="_Player", ThisKey="PlayerID", OtherKey="ID", IsForeignKey=true)]
		public Player Player
		{
			get
			{
				return this._Player.Entity;
			}
			set
			{
				Player previousValue = this._Player.Entity;
				if (((previousValue != value) 
							|| (this._Player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Player.Entity = null;
						previousValue.PlayerQuests.Remove(this);
					}
					this._Player.Entity = value;
					if ((value != null))
					{
						value.PlayerQuests.Add(this);
						this._PlayerID = value.ID;
					}
					else
					{
						this._PlayerID = default(int);
					}
					this.SendPropertyChanged("Player");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quest_PlayerQuest", Storage="_Quest", ThisKey="QuestID", OtherKey="ID", IsForeignKey=true)]
		public Quest Quest
		{
			get
			{
				return this._Quest.Entity;
			}
			set
			{
				Quest previousValue = this._Quest.Entity;
				if (((previousValue != value) 
							|| (this._Quest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quest.Entity = null;
						previousValue.PlayerQuests.Remove(this);
					}
					this._Quest.Entity = value;
					if ((value != null))
					{
						value.PlayerQuests.Add(this);
						this._QuestID = value.ID;
					}
					else
					{
						this._QuestID = default(int);
					}
					this.SendPropertyChanged("Quest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlayerCar")]
	public partial class PlayerCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PlayerID;
		
		private int _CarID;
		
		private bool _Roadworthy;
		
		private decimal _FuelLevel;
		
		private EntityRef<Car> _Car;
		
		private EntityRef<Player> _Player;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPlayerIDChanging(int value);
    partial void OnPlayerIDChanged();
    partial void OnCarIDChanging(int value);
    partial void OnCarIDChanged();
    partial void OnRoadworthyChanging(bool value);
    partial void OnRoadworthyChanged();
    partial void OnFuelLevelChanging(decimal value);
    partial void OnFuelLevelChanged();
    #endregion
		
		public PlayerCar()
		{
			this._Car = default(EntityRef<Car>);
			this._Player = default(EntityRef<Player>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="Int NOT NULL")]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					if (this._Player.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._PlayerID = value;
					this.SendPropertyChanged("PlayerID");
					this.OnPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarID", DbType="Int NOT NULL")]
		public int CarID
		{
			get
			{
				return this._CarID;
			}
			set
			{
				if ((this._CarID != value))
				{
					if (this._Car.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarIDChanging(value);
					this.SendPropertyChanging();
					this._CarID = value;
					this.SendPropertyChanged("CarID");
					this.OnCarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roadworthy", DbType="Bit NOT NULL")]
		public bool Roadworthy
		{
			get
			{
				return this._Roadworthy;
			}
			set
			{
				if ((this._Roadworthy != value))
				{
					this.OnRoadworthyChanging(value);
					this.SendPropertyChanging();
					this._Roadworthy = value;
					this.SendPropertyChanged("Roadworthy");
					this.OnRoadworthyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelLevel", DbType="Decimal(10,2) NOT NULL")]
		public decimal FuelLevel
		{
			get
			{
				return this._FuelLevel;
			}
			set
			{
				if ((this._FuelLevel != value))
				{
					this.OnFuelLevelChanging(value);
					this.SendPropertyChanging();
					this._FuelLevel = value;
					this.SendPropertyChanged("FuelLevel");
					this.OnFuelLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_PlayerCar", Storage="_Car", ThisKey="CarID", OtherKey="ID", IsForeignKey=true)]
		public Car Car
		{
			get
			{
				return this._Car.Entity;
			}
			set
			{
				Car previousValue = this._Car.Entity;
				if (((previousValue != value) 
							|| (this._Car.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car.Entity = null;
						previousValue.PlayerCars.Remove(this);
					}
					this._Car.Entity = value;
					if ((value != null))
					{
						value.PlayerCars.Add(this);
						this._CarID = value.ID;
					}
					else
					{
						this._CarID = default(int);
					}
					this.SendPropertyChanged("Car");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Player_PlayerCar", Storage="_Player", ThisKey="PlayerID", OtherKey="ID", IsForeignKey=true)]
		public Player Player
		{
			get
			{
				return this._Player.Entity;
			}
			set
			{
				Player previousValue = this._Player.Entity;
				if (((previousValue != value) 
							|| (this._Player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Player.Entity = null;
						previousValue.PlayerCars.Remove(this);
					}
					this._Player.Entity = value;
					if ((value != null))
					{
						value.PlayerCars.Add(this);
						this._PlayerID = value.ID;
					}
					else
					{
						this._PlayerID = default(int);
					}
					this.SendPropertyChanged("Player");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
